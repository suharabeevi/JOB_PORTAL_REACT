{"version":3,"file":"static/js/876.0fc9b613.chunk.js","mappings":"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","sources":["Components/Messenger/employer/EmployerCoversations.tsx","Components/Messenger/employer/EmployerMessenger.tsx","features/axios/api/employer/EmployerVerificationcheck.ts","features/axios/api/messenger/conversation.ts","features/axios/api/messenger/messages.ts","Components/Employer/Side-nav/SdeNav.tsx","Context/NavRoutes.tsx","features/axios/api/employer/jobsByEmployer.ts","Components/Employer/job/ConfirmDelete.tsx","features/axios/api/employer/deleteJob.ts","Components/Employer/Sections/JobsByEmployer.tsx","Components/Employer/Employer/AllJobsEmployer.tsx","Components/Employer/Employer/Dashboard.tsx","features/axios/api/applications/allApplicationEmployer.ts","Components/Employer/Employer/Applications.tsx","Components/Header/EmployerHeaderWithNav.tsx","Components/Employer/profile/EmployerProfile.tsx","pages/messenger/EmployerMessenger.tsx","pages/employer/EmployerHomePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport configKeys from \"../../../utils/config\";\r\nimport axios from \"axios\";\r\nimport { UserDataPayload } from \"../../../types/PayloadInterface\";\r\n\r\nfunction Conversations({ conversation, currentUser, onlineUsers }: any) {\r\n  const [user, setUser] = useState<UserDataPayload>();\r\n  const [isOnline, setIsOnline] = useState<boolean>(false);\r\n  \r\n  useEffect(() => {\r\n    const senderId = conversation?.members?.find(\r\n      (m: Array<string>) => m !== currentUser?._id\r\n    );\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\r\n          `${configKeys.API_URL}user/user-data/${senderId}`\r\n        );\r\n        setUser(res?.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [conversation.member, conversation?.members, currentUser?._id]);\r\n\r\n  useEffect(() => {\r\n    const onlineUser = onlineUsers?.filter((f: any) => f.userId === user?._id)\r\n    if(onlineUser?.length > 0) {\r\n      setIsOnline(true);\r\n    }\r\n  }, [onlineUsers, user?._id])\r\n\r\n  return (\r\n    <div className=\"flex items-center mt-5 p-3 cursor-pointer hover:bg-blue-gray-50 relative\">\r\n      <img\r\n        className=\"mr-5 w-10 h-10 rounded-full object-cover\"\r\n        src={user?.image ?? '../user.jpg'}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"flex flex-col\">\r\n        <span className=\"font-semibold\">{user?.name}</span>\r\n        { isOnline? <span className=\"text-gray-500\">online</span> : <span className=\"text-gray-500\">offline</span>}\r\n      </div>\r\n      { isOnline? <div className=\"absolute top-3 left-10 h-3 w-3 rounded-full bg-limeGreen\"></div>: <div></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Conversations;","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport configKeys from \"../../../utils/config\";\r\n\r\ntype MessageType = {\r\n  message: any;\r\n  own: boolean;\r\n  id: string;\r\n};\r\n\r\nfunction Message({ message, own, id }: MessageType) {\r\n  const [user, setUser] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      try {\r\n        if (!own) {\r\n          const res = await axios(`${configKeys.API_URL}user/user-data/${id}`);\r\n          setUser(res?.data);\r\n        } else {\r\n          const res = await axios(`${configKeys.API_URL}employer/employer-data/${id}`);\r\n          setUser(res?.data)\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [id, own]);\r\n\r\n  return (\r\n    <div className={`flex flex-col mt-3 ${own ? \"items-end\" : \"\"}`}>\r\n      <div className=\"flex\">\r\n        <img\r\n          className=\"mr-2 w-8 h-8 rounded-full object-cover\"\r\n          src={user?.image ?? '../user.jpg'}\r\n          alt=\"\"\r\n        />\r\n        <p\r\n          className={`p-3 rounded-3xl max-w-xs ${\r\n            own ? \"bg-gray-300 text-black\" : \"bg-purple-600 text-white\"\r\n          }`}\r\n        >\r\n          {message?.text}\r\n        </p>\r\n      </div>\r\n      <div className=\"text-xs mt-2\">{format(message?.createdAt)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;","import {AxiosRequestConfig} from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport configKeys from \"../../../../utils/config\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";\r\n\r\nconst api = setupAxiosInterceptorsEmployer()\r\n\r\nexport const EmployerVerificationCheck= async (): Promise<any>=>{\r\n\r\n    try{\r\n        const config: AxiosRequestConfig = {\r\n            url: apiConfig.Employer_Verification_check,\r\n            method: 'get'\r\n        }\r\n        const response = await api(config)\r\n        console.log(response,\"response\");\r\n        \r\n        return response?.data\r\n    }catch(err:any){\r\n        throw new Error('something went wrong!')\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const createNewJob = async (\r\n//     payload: JobCreationPayload,\r\n//   ): Promise<any> => {\r\n//     try {\r\n//       const config: AxiosRequestConfig = {\r\n//         url: apiConfig.createNewJob,\r\n//         method: \"post\",\r\n//         data: payload\r\n//       };\r\n//       const response = await api(config);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       throw new Error(\"error while creating new job\");\r\n//     }\r\n//   };\r\n  \r\n//   export default createNewJob;","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport setupAxiosInterceptors from \"../../intercepters/axiosInterceptor\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";\r\n\r\nconst userApi = setupAxiosInterceptors();\r\nconst empApi = setupAxiosInterceptorsEmployer();\r\n\r\nexport const getUserConversations = async(userId:string): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getConversations}/${userId}`,\r\n            method: 'get'\r\n        }\r\n        const res = await userApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while getting user conversations');\r\n    }\r\n}\r\n\r\nexport const getEmployerConversations = async(empId: string): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getConversations}/${empId}`,\r\n            method: 'get'\r\n        }\r\n        const res = await empApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while getting employer conversations');\r\n    }\r\n}\r\n\r\nexport const createConversation = async(user1: string, user2: string) : Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getConversations}`,\r\n            method: 'post',\r\n            data: {\r\n                senderId: user1,\r\n                receiverId: user2\r\n            }\r\n        }\r\n        const res = await axios(config);\r\n        return res.data;\r\n\r\n    } catch (error) {\r\n        throw new Error('Error while creating conversation');\r\n    }\r\n}","import { AxiosRequestConfig } from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport setupAxiosInterceptors from \"../../intercepters/axiosInterceptor\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";   \r\n\r\nconst userApi = setupAxiosInterceptors();\r\nconst empApi = setupAxiosInterceptorsEmployer();\r\n\r\nexport const getUserMessages = async(conId:string): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getMessages}/${conId}`,\r\n            method: 'get'\r\n        }\r\n        const res = await userApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while getting user messages');\r\n    }\r\n}\r\n\r\nexport const postUserMessages = async(message: {}): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getMessages}`,\r\n            method: 'post',\r\n            data: message\r\n        }\r\n        const res = await userApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while posting user messages');\r\n    }\r\n}\r\n\r\nexport const getEmployerMessages = async(conId: string): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getMessages}/${conId}`,\r\n            method: 'get'\r\n        }\r\n        const res = await empApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while getting employer messages');\r\n    }\r\n}\r\n\r\nexport const postEmployerMessages = async(message: {}): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: `${apiConfig.getMessages}`,\r\n            method: 'post',\r\n            data: message\r\n        }\r\n        const res = await empApi(config);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw new Error('Error while posting employer messages');\r\n    }\r\n}","import PropTypes from \"prop-types\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\n// import { useMaterialTailwindController, setOpenSidenav } from \"../context\";\r\nimport { ReactElement, useState } from \"react\";\r\n\r\ninterface Route {\r\n  icon: ReactElement;\r\n  name: string;\r\n  path: string;\r\n  // element:ReactElement\r\n}\r\n\r\ninterface Routes {\r\n  pages: Route[];\r\n}\r\n\r\ninterface NavbarProps {\r\n  routes: Routes[];\r\n}\r\n\r\nexport function Sidenav({ routes }: NavbarProps) {\r\n  //   const [controller, dispatch] = useMaterialTailwindController();\r\n  const [selected, setSelected] = useState(true);\r\n  const [openSidenav, setOpenSidenav] = useState(false);\r\n  const sidenavType = \"white\";\r\n  const sidenavTypes = {\r\n    dark: \"bg-gradient-to-br from-blue-gray-800 to-blue-gray-900\",\r\n    white: \"bg-white shadow-lg\",\r\n    transparent: \"bg-transparent\",\r\n  };\r\n  const handleClick = () => {\r\n    setSelected(true);\r\n  };\r\n  return (\r\n    <aside\r\n      className={`${sidenavTypes[sidenavType]} ${\r\n        openSidenav ? \"translate-x-0\" : \"-translate-x-80\"\r\n      } fixed inset-0 z-10 my-4 ml-4 h-[calc(100vh-32px)] w-72 rounded-xl transition-transform duration-300 xl:translate-x-0`}\r\n    >\r\n      <div className={`relative border-b ${\"border-blue-gray-50\"}`}>\r\n        <Link to=\"/\" className=\"flex items-center gap-4 py-6 px-8\">\r\n          {/* <Avatar\r\n            src=\"\"\r\n            size=\"sm\"\r\n          /> */}\r\n          <Typography variant=\"h6\" color=\"black\">\r\n           <img src=\"https://res.cloudinary.com/dpgbodkae/image/upload/v1695012129/found_it-logos_black_wgrai8.png\" className=\"h-8 mr-3\" alt=\"voyago logo\" />\r\n                <span className=\"self-center text-xl font-serif sm:text-2xl whitespace-nowrap dark:text-white\">\r\n                  Found<span className=\"text-sky-600\">it</span>\r\n                </span>\r\n          </Typography>\r\n        </Link>\r\n        <IconButton\r\n          variant=\"text\"\r\n          color=\"white\"\r\n          size=\"sm\"\r\n          ripple={false}\r\n          className=\"absolute right-0 top-0 grid rounded-br-none rounded-tl-none xl:hidden\"\r\n          //   onClick={() => setOpenSidenav(dispatch, false)}\r\n        >\r\n          <XMarkIcon strokeWidth={2.5} className=\"h-5 w-5 text-white\" />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"m-4\">\r\n        {routes.map(({ layout, title, pages }: any, key) => (\r\n          <ul key={key} className=\"mb-4 flex flex-col gap-1 \">\r\n            {title && (\r\n              <li className=\"mx-3.5 mt-4 mb-2\">\r\n                <Typography\r\n                  variant=\"small\"\r\n                  color=\"blue-gray\"\r\n                  className=\"font-black uppercase opacity-75\"\r\n                >\r\n                  {title}\r\n                </Typography>\r\n              </li>\r\n            )}\r\n            {pages.map(({ icon, name, path }: Route) => (\r\n              <li key={name}>\r\n                <NavLink to={path}>\r\n                  {({ isActive }) => (\r\n                    <Button\r\n                      variant={isActive ? \"gradient\" : \"text\"}\r\n                      color={isActive ? \"brown\" : \"gray\"}\r\n                      className={`flex items-center gap-4 px-4 capitalize${\r\n                        isActive && selected ? \" bg-gray-700\" : \"\"\r\n                      }`}\r\n                      fullWidth\r\n                      onClick={handleClick}\r\n                    >\r\n                      {icon}\r\n                      <Typography\r\n                        color=\"inherit\"\r\n                        className=\"font-medium capitalize\"\r\n                      >\r\n                        {name}\r\n                      </Typography>\r\n                    </Button>\r\n                  )}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nSidenav.defaultProps = {\r\n  brandImg: \"\",\r\n  brandName: \"Material Tailwind React\",\r\n};\r\n\r\nSidenav.propTypes = {\r\n  brandImg: PropTypes.string,\r\n  brandName: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nSidenav.displayName = \"/src/widgets/layout/sidnave.jsx\";\r\n\r\nexport default Sidenav;","import { FaChartBar, FaBriefcase, FaEnvelope, FaFacebookMessenger, FaUser } from \"react-icons/fa\";\r\n\r\nconst icon = {\r\n  className: \"w-5 h-5 text-inherit\",\r\n};\r\n\r\nexport const NavRoutes = [\r\n  {\r\n    layout: \"admin\",\r\n    pages: [\r\n      {\r\n        icon: <FaChartBar {...icon} />,\r\n        name: \"dashboard\",\r\n        path: \"/employer/dashboard\",\r\n      },\r\n      {\r\n        icon: <FaBriefcase {...icon} />,\r\n        name: \"Jobs\",\r\n        path: \"/employer/all-jobs\",\r\n      },\r\n      {\r\n        icon: <FaEnvelope {...icon} />,\r\n        name: \"Applications\",\r\n        path: \"/employer/applications\",\r\n      },\r\n      {\r\n        icon: <FaFacebookMessenger {...icon} />,\r\n        name: \"Chats\",\r\n        path: \"/employer/messenger\",\r\n      },\r\n      {\r\n        icon: <FaUser {...icon} />,\r\n        name: \"Profile\",\r\n        path: \"/employer/profile\",\r\n      },\r\n    ],\r\n  },\r\n];","import { AxiosRequestConfig } from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";\r\nconst api = setupAxiosInterceptorsEmployer();\r\n\r\nexport const employerJobs = async(): Promise<any> => {\r\n    try {\r\n        const config : AxiosRequestConfig = {\r\n            url: apiConfig.employerJObs,\r\n            method: 'get'\r\n        }\r\n        const response = await api(config);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('error while getting jobs');\r\n    }\r\n}","import { Fragment, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleted } from \"../../../features/axios/redux/slices/employer/employerJobsSlice\";\r\ninterface DeleteConfirmationDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n}\r\nfunction ConfirmDelete({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n}: DeleteConfirmationDialogProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleConfirm = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      onConfirm();\r\n      setTimeout(() => {\r\n        dispatch(deleted())\r\n        toast.success(\"Job deleted successfully\");\r\n      }, 1500);\r\n      setTimeout(() => {\r\n        onClose();\r\n        setIsLoading(false);  \r\n      }, 3000);\r\n    } catch (error) {\r\n      toast.error(\"Failed to delete the job\");\r\n    } \r\n  };\r\n  return (\r\n    <Transition.Root show={isOpen} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed inset-0 overflow-y-auto z-50\"\r\n        onClose={onClose}\r\n      >\r\n        <div className=\"flex items-center justify-center min-h-screen px-4 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\r\n              <div className=\"sm:flex sm:items-start\">\r\n                <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                  <ExclamationTriangleIcon\r\n                    className=\"h-6 w-6 text-red-600\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                  <Dialog.Title\r\n                    as=\"h3\"\r\n                    className=\"text-lg leading-6 font-medium text-gray-900\"\r\n                  >\r\n                    Delete Job\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      Are you sure you want to delete the job ? All of the data\r\n                      will be permanently removed. This action cannot be undone.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={handleConfirm}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? \"Deleting...\" : \"Delete\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 sm:mt-0 sm:w-auto sm:text-sm\"\r\n                  onClick={onClose}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\nexport default ConfirmDelete;","import { AxiosRequestConfig } from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";\r\nconst api = setupAxiosInterceptorsEmployer();\r\n\r\nconst deleteJob = async (id: string): Promise<any> => {\r\n  try {\r\n    const config: AxiosRequestConfig = {\r\n      url: `${apiConfig.deleteJob}/${id}`,\r\n      method: \"delete\",\r\n    };\r\n    await api(config);\r\n  } catch (error) {\r\n    throw new Error(\"error while deleting the job\");\r\n  }\r\n};\r\n\r\nexport default deleteJob;","import { Menu, Transition } from \"@headlessui/react\";\r\nimport { JobsInterface } from \"../../../types/JobInterface\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ConfirmDelete from \"../job/ConfirmDelete\";\r\nimport deleteJob from \"../../../features/axios/api/employer/deleteJob\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setEmployerJobId } from \"../../../features/axios/redux/slices/employer/employerJobDetailsSlice\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport {\r\n  BriefcaseIcon,\r\n  CalendarIcon,\r\n  ChevronDownIcon,\r\n  CurrencyDollarIcon,\r\n  LinkIcon,\r\n  MapPinIcon,\r\n  PencilIcon,\r\n  TrashIcon,\r\n} from \"@heroicons/react/20/solid\";\r\n\r\ninterface AllJobsProps {\r\n  jobs: JobsInterface;\r\n}\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst JobsByEmployer: React.FC<AllJobsProps> = ({ jobs }) => {\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [selectedJobId, setSelectedJobId] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleDeleteButtonClick = (jobId: string) => {\r\n    setSelectedJobId(jobId);\r\n    setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const handleViewJob = (jobId: string) => {\r\n    dispatch(setEmployerJobId(jobId));\r\n    navigate(\"/job/view-job\");\r\n  };\r\n  return (\r\n      <div className=\"border border-gray-300 rounded-md p-4 mb-4  bg-white\">\r\n        <div className=\"lg:flex lg:items-center lg:justify-between\">\r\n          <div className=\"min-w-0 flex-1\">\r\n            <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-xl sm:tracking-tight\">\r\n              {jobs.title}\r\n            </h2>\r\n            <div className=\"mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap sm:space-x-6\">\r\n              {/* Render job details */}\r\n              <div className=\"mt-2 flex items-center text-sm text-gray-500\">\r\n                <BriefcaseIcon\r\n                  className=\"mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                {jobs.employmentType}\r\n              </div>\r\n              <div className=\"mt-2 flex items-center text-sm text-gray-500\">\r\n                <MapPinIcon\r\n                  className=\"mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                {jobs.location}\r\n              </div>\r\n              <div className=\"mt-2 flex items-center text-sm text-gray-500\">\r\n                <CurrencyDollarIcon\r\n                  className=\"mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                {jobs.salary}\r\n              </div>\r\n              <div className=\"mt-2 flex items-center text-sm text-gray-500\">\r\n                <CalendarIcon\r\n                  className=\"mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                Created on {new Date(jobs.createdAt).toLocaleDateString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-5 flex lg:ml-4 lg:mt-0\">\r\n            {/* Render action buttons */}\r\n            <span className=\"hidden sm:block\">\r\n              <Link to={`/job/edit-job/${jobs._id}`}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n                >\r\n                  <PencilIcon\r\n                    className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  Edit\r\n                </button>\r\n              </Link>\r\n            </span>\r\n            <span className=\"ml-3 hidden sm:block\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n                onClick={() => handleViewJob(jobs._id)}\r\n              >\r\n                <LinkIcon\r\n                  className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400 rounded-md bg-brown-600 inline-flex items-center\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                View\r\n              </button>\r\n            </span>\r\n            <span className=\"sm:ml-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"inline-flex items-center rounded-md bg-brown-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                onClick={() => handleDeleteButtonClick(jobs._id)}\r\n              >\r\n                <TrashIcon\r\n                  className=\"-ml-0.5 mr-1.5 h-5 w-5\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                Delete\r\n              </button>\r\n            </span>\r\n            {/* Dropdown */}\r\n            <Menu as=\"div\" className=\"relative ml-3 sm:hidden\">\r\n              <Menu.Button className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:ring-gray-400\">\r\n                More\r\n                <ChevronDownIcon\r\n                  className=\"-mr-1 ml-1.5 h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </Menu.Button>\r\n              <Transition\r\n                as={React.Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"transform opacity-0 scale-95\"\r\n                enterTo=\"transform opacity-100 scale-100\"\r\n                leave=\"transition ease-in duration-75\"\r\n                leaveFrom=\"transform opacity-100 scale-100\"\r\n                leaveTo=\"transform opacity-0 scale-95\"\r\n              >\r\n                <Menu.Items className=\"absolute right-0 z-10 -mr-1 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <a\r\n                        href=\"l\"\r\n                        className={classNames(\r\n                          active ? \"bg-gray-100\" : \"\",\r\n                          \"block px-4 py-2 text-sm text-gray-700\"\r\n                        )}\r\n                      >\r\n                        Edit\r\n                      </a>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <a\r\n                        href=\"l\"\r\n                        className={classNames(\r\n                          active ? \"bg-gray-100\" : \"\",\r\n                          \"block px-4 py-2 text-sm text-gray-700\"\r\n                        )}\r\n                      >\r\n                        View\r\n                      </a>\r\n                    )}\r\n                  </Menu.Item>\r\n                </Menu.Items>\r\n              </Transition>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n        {showDeleteConfirmation && (\r\n          <ConfirmDelete\r\n            isOpen={showDeleteConfirmation}\r\n            onClose={() => setShowDeleteConfirmation(false)}\r\n            onConfirm={() => deleteJob(selectedJobId)}\r\n          />\r\n        )}\r\n        <ToastContainer />\r\n      </div>\r\n  );\r\n};\r\nexport default JobsByEmployer;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEmployerJobs,clearEmployerJobs } from \"../../../features/axios/redux/slices/employer/employerJobsSlice\";\r\nimport { employerJobs } from \"../../../features/axios/api/employer/jobsByEmployer\";\r\nimport JobsByEmployer from \"../Sections/JobsByEmployer\";\r\nimport { JobsInterface } from \"../../../types/JobInterface\";\r\nimport { PlusIcon } from \"@heroicons/react/24/outline\";\r\nimport { RootState } from \"../../../features/axios/redux/reducers/Reducer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { EmployerVerificationCheck } from \"../../../features/axios/api/employer/EmployerVerificationcheck\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Input,\r\n  CardFooter,\r\n  Typography,\r\n  Button,\r\n} from \"@material-tailwind/react\";\r\nimport { MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\nfunction AllJobsEmployer() {\r\n  const dispatch = useDispatch();\r\n  const deleted = useSelector((state: RootState) => state.employerJobs.change);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  const employerAllJobs = useSelector(\r\n    (state: any) => (state.employerJobs.employerJobs.jobs)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchJobsAndStore = async () => {\r\n      try {\r\n        const jobs = await employerJobs();\r\n        dispatch(setEmployerJobs(jobs));\r\n      } catch (error: any) {\r\n        throw new Error(\"failed fetching jobs\", error);\r\n      }\r\n    };\r\n    fetchJobsAndStore();\r\n    return () => {\r\n      dispatch(clearEmployerJobs());\r\n    };\r\n  }, [dispatch, deleted]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedSearchQuery(searchQuery);\r\n    }, 400);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [searchQuery]);\r\n\r\n  const filterJobs = employerAllJobs?.filter(\r\n    (job: JobsInterface) =>\r\n      job?.title\r\n        ?.toLocaleLowerCase()\r\n        .includes(debouncedSearchQuery?.toLocaleLowerCase()) ||\r\n      job?.employmentType\r\n        ?.toLocaleLowerCase()\r\n        .includes(debouncedSearchQuery?.toLocaleLowerCase()) ||\r\n      job?.location\r\n        ?.toLocaleLowerCase()\r\n        .includes(debouncedSearchQuery.toLocaleLowerCase())\r\n  );\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    return (filterJobs).reverse().slice(startIndex, endIndex);\r\n  };\r\n\r\n  const changePage = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const [isVerified, setIsVerified] = useState<boolean | null >(null);\r\n  useEffect(()=>{\r\n    const checkVerified = async()=>{\r\n    const result = await EmployerVerificationCheck()\r\n    console.log(result,\"result\");\r\n    if(result?.result){\r\n      setIsVerified(true)\r\n    }else{\r\n      setIsVerified(false)\r\n    }\r\n    }\r\n   checkVerified()\r\n  },[])\r\n  \r\n  return (\r\n    <Card className=\"h-full w-full\">\r\n      <div className=\"\">\r\n        <CardHeader floated={false} shadow={false} className=\"rounded-none\">\r\n          <div className=\"flex flex-col items-center justify-between gap-4 md:flex-row\">\r\n            <div className=\"mb-4\">\r\n            {isVerified ? (\r\n      // Render \"Post Job\" button\r\n      <Link to={\"/job/create-job\"}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"inline-flex items-center rounded-md bg-brown-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-brown-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n        >\r\n          <PlusIcon className=\"-ml-0.5 mr-1.5 h-5 w-5\" aria-hidden=\"true\" />\r\n          Post Job\r\n        </button>\r\n      </Link>\r\n    ) : (\r\n      // Render \"Not Verified\" message\r\n      <div\r\n        className=\"flex items-center p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 dark:border-red-800\"\r\n        role=\"alert\"\r\n      >\r\n        <svg\r\n          className=\"flex-shrink-0 inline w-4 h-4 mr-3\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 20 20\"\r\n        >\r\n          <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\r\n        </svg>\r\n        <span className=\"sr-only\">Info</span>\r\n        <div>\r\n          <span className=\"font-medium\">Not Verified!</span> Your\r\n          verification is under process.\r\n        </div>\r\n      </div>\r\n    )}\r\n            </div>\r\n            <div className=\"w-full md:w-72\">\r\n              <Input\r\n                label=\"Search\"\r\n                color=\"brown\"\r\n                icon={<MagnifyingGlassIcon className=\"h-5 w-5\" />}\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)} crossOrigin={undefined}              />\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody className=\"overflow-scroll px-0\">\r\n          <div>\r\n            {filterJobs &&\r\n              getPaginatedData()?.map((job: JobsInterface) => (\r\n                <JobsByEmployer key={job._id} jobs={job} />\r\n              ))}\r\n          </div>\r\n        </CardBody>\r\n        <ToastContainer />\r\n      </div>\r\n      <CardFooter className=\"flex items-center justify-between border-t border-blue-gray-50 p-4\">\r\n        <Typography variant=\"small\" color=\"blue-gray\" className=\"font-normal\">\r\n          Page {currentPage} of{\" \"}\r\n          {Math.ceil(filterJobs?.length / ITEMS_PER_PAGE)}\r\n        </Typography>\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"brown\"\r\n            size=\"sm\"\r\n            onClick={() => changePage(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"brown\"\r\n            size=\"sm\"\r\n            onClick={() => changePage(currentPage + 1)}\r\n            disabled={\r\n              currentPage ===\r\n              Math.ceil(filterJobs?.length / ITEMS_PER_PAGE)\r\n            }\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AllJobsEmployer;","import React from 'react'\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      Dash board\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import { AxiosRequestConfig } from \"axios\";\r\nimport apiConfig from \"../../../../utils/apiConfig\";\r\nimport setupAxiosInterceptorsEmployer from \"../../intercepters/axiosInterceptorEmployer\";\r\nconst api = setupAxiosInterceptorsEmployer();\r\n\r\nexport const allApplications = async (): Promise<any> => {\r\n    try {\r\n        const config: AxiosRequestConfig = {\r\n            url: apiConfig.allApplication,\r\n            method: 'get'\r\n        }\r\n        const applications = await api(config);\r\n        return applications.data;\r\n    } catch (error) {\r\n        throw new Error('error while getting applications');\r\n    }\r\n}","import {\r\n    MagnifyingGlassIcon,\r\n    ChevronUpDownIcon,\r\n  } from \"@heroicons/react/24/outline\";\r\n  import { EyeIcon } from \"@heroicons/react/24/solid\";\r\n  import {\r\n    Card,\r\n    CardHeader,\r\n    Input,\r\n    Typography,\r\n    Button,\r\n    CardBody,\r\n    Chip,\r\n    CardFooter,\r\n    Avatar,\r\n    IconButton,\r\n    Tooltip,\r\n  } from \"@material-tailwind/react\";\r\n  import { useEffect, useState } from \"react\";\r\n  import { allApplications } from \"../../../features/axios/api/applications/allApplicationEmployer\";\r\n  import { jobDetails } from \"../../../features/axios/api/User/jobDetails\";\r\n  import { useNavigate } from \"react-router-dom\";\r\n  import ApplicationDetails from \"../../../types/ApplicationsInterface\";\r\n  \r\n  const TABLE_HEAD = [\r\n    \"Candidate\",\r\n    \"Applied For\",\r\n    \"Application Status\",\r\n    \"Applied on\",\r\n    \"\",\r\n  ];\r\n  const ITEMS_PER_PAGE = 4;\r\n  \r\n  export default function Applications() {\r\n    const [applicationData, setApplicationData] = useState<ApplicationDetails[]>([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [debouncedSearchQuery, setDebouncedSearchQuery] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const navigate = useNavigate();\r\n  \r\n    useEffect(() => {\r\n      const applications = async () => {\r\n        const data = await allApplications();\r\n        console.log(data);\r\n        \r\n        setApplicationData(data?.applications);\r\n      };\r\n      applications();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n        setDebouncedSearchQuery(searchQuery);\r\n      }, 400);\r\n  \r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }, [searchQuery]);\r\n  \r\n    const handleViewApplicant = (applicationId: string) => {\r\n      navigate(`/application/view-applicant/${applicationId}`);\r\n    };\r\n  console.log(handleViewApplicant);\r\n  \r\n    const filterApplication = applicationData?.filter(\r\n      (application: ApplicationDetails) =>\r\n        application?.userId?.name\r\n          ?.toLocaleLowerCase()\r\n          .includes(debouncedSearchQuery?.toLocaleLowerCase()) ||\r\n        application?.jobId?.title\r\n          ?.toLocaleLowerCase()\r\n          .includes(debouncedSearchQuery?.toLocaleLowerCase()) ||\r\n        application?.applicationStatus\r\n          ?.toLocaleLowerCase()\r\n          .includes(debouncedSearchQuery?.toLocaleLowerCase())\r\n    );\r\n  \r\n    const reverseFilterApplication = [...filterApplication].reverse();\r\n  \r\n    const getPaginatedData = () => {\r\n      const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n      const endIndex = startIndex + ITEMS_PER_PAGE;\r\n      return reverseFilterApplication?.slice(startIndex, endIndex);\r\n    };\r\n  \r\n    const changePage = (pageNumber: number) => {\r\n      setCurrentPage(pageNumber);\r\n    };\r\n  \r\n    return (\r\n      <Card className=\"h-full w-full\">\r\n        <CardHeader floated={false} shadow={false} className=\"rounded-none\">\r\n          <div className=\"mb-8 flex items-center justify-between gap-8\">\r\n            <div>\r\n              <Typography variant=\"h5\" color=\"blue-gray\">\r\n                All applications\r\n              </Typography>\r\n              <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n                See information about all applicants\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col items-center justify-between gap-4 md:flex-row\">\r\n            <div className=\"w-full md:w-72\">\r\n              <Input\r\n                            label=\"Search\"\r\n                            color=\"purple\"\r\n                            icon={<MagnifyingGlassIcon className=\"h-5 w-5\" />}\r\n                            value={searchQuery}\r\n                            onChange={(e) => setSearchQuery(e.target.value)} crossOrigin={undefined}              />\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody className=\"overflow-scroll px-0\">\r\n          <table className=\"mt-4 w-full min-w-max table-auto text-left\">\r\n            <thead>\r\n              <tr>\r\n                {TABLE_HEAD?.map((head, index) => (\r\n                  <th\r\n                    key={head}\r\n                    className=\"cursor-pointer border-y border-blue-gray-100 bg-blue-gray-50/50 p-4 transition-colors hover:bg-blue-gray-50\"\r\n                  >\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"flex items-center justify-between gap-2 font-normal leading-none opacity-70\"\r\n                    >\r\n                      {head}{\" \"}\r\n                      {index !== TABLE_HEAD.length - 1 && (\r\n                        <ChevronUpDownIcon strokeWidth={2} className=\"h-4 w-4\" />\r\n                      )}\r\n                    </Typography>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getPaginatedData()?.map((data, index) => {\r\n                const isLast = index === jobDetails.length - 1;\r\n                const classes = isLast\r\n                  ? \"p-4\"\r\n                  : \"p-4 border-b border-blue-gray-50\";\r\n  \r\n                return (\r\n                  <tr key={index}>\r\n                    <td className={classes}>\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Avatar src={data?.userId?.image ?? 'https://cdn-icons-png.flaticon.com/512/149/149071.png'} alt={\"img\"} size=\"sm\" />\r\n                        <div className=\"flex flex-col\">\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal\"\r\n                          >\r\n                            {data?.userId?.name}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal opacity-70\"\r\n                          >\r\n                            {data?.userId?.email}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <div className=\"flex flex-col\">\r\n                        <Typography\r\n                          variant=\"small\"\r\n                          color=\"blue-gray\"\r\n                          className=\"font-normal\"\r\n                        >\r\n                          {data?.jobId?.title}\r\n                        </Typography>\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <div className=\"w-max\">\r\n                        <Chip\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          value={\r\n                            data.applicationStatus === \"Applied\"\r\n                              ? \"Applied\"\r\n                              : data.applicationStatus === \"Rejected\"\r\n                              ? \"Rejected\"\r\n                              : \"Shortlisted\"\r\n                          }\r\n                          color={\r\n                            data.applicationStatus === \"Applied\"\r\n                              ? \"green\"\r\n                              : data.applicationStatus === \"Rejected\"\r\n                              ? \"red\"\r\n                              : \"orange\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {new Date(data.createdAt).toLocaleDateString()}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Tooltip content=\"View Application\">\r\n                        <IconButton\r\n                          variant=\"text\"\r\n                          color=\"blue-gray\"\r\n                          onClick={() => handleViewApplicant(data._id)}\r\n                        >\r\n                          <EyeIcon className=\"h-4 w-4\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n        <CardFooter className=\"flex items-center justify-between border-t border-blue-gray-50 p-4\">\r\n          <Typography variant=\"small\" color=\"blue-gray\" className=\"font-normal\">\r\n            Page {currentPage} of{\" \"}\r\n            {Math.ceil(filterApplication?.length / ITEMS_PER_PAGE)}\r\n          </Typography>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"purple\"\r\n              size=\"sm\"\r\n              onClick={() => changePage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"purple\"\r\n              size=\"sm\"\r\n              onClick={() => changePage(currentPage + 1)}\r\n              disabled={\r\n                currentPage ===\r\n                Math.ceil(filterApplication?.length / ITEMS_PER_PAGE)\r\n              }\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { clearEmployerToken } from \"../../features/axios/redux/slices/employer/employerTokenSlice\";\r\nimport { employerLogout } from \"../../features/axios/redux/slices/employer/employerDetailsSlice\";\r\nimport {\r\n    Navbar,\r\n    Typography,\r\n    Button,\r\n    Menu,\r\n    MenuHandler,\r\n    MenuList,\r\n    MenuItem,\r\n    Avatar,\r\n  } from \"@material-tailwind/react\";\r\n  import {\r\n    UserCircleIcon,\r\n    ChevronDownIcon,\r\n    InboxArrowDownIcon,\r\n    PowerIcon,\r\n  } from \"@heroicons/react/24/outline\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import { useNavigate } from \"react-router-dom\";\r\n import { RootState } from \"../../features/axios/redux/reducers/Reducer\";\r\nimport { fetchEmployer } from \"../../features/axios/redux/slices/employer/employerDetailsSlice\";\r\n  interface ProfileMenuItem {\r\n    label: string;\r\n    icon: React.ElementType;\r\n  }\r\n  \r\n  const profileMenuItems: ProfileMenuItem[] = [\r\n    // {\r\n    //   label: \"My Profile\",\r\n    //   icon: UserCircleIcon,\r\n    // },\r\n    {\r\n      label: \"Inbox\",\r\n      icon: InboxArrowDownIcon,\r\n    },\r\n    {\r\n      label: \"Sign Out\",\r\n      icon: PowerIcon,\r\n    },\r\n  ];\r\n  \r\n  function ProfileMenu() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const employer = useSelector((state: RootState) => state.employerDetails.employerDetails);\r\n  \r\n    const closeMenu = () => setIsMenuOpen(false);\r\n    const handleLogout = () => {\r\n      dispatch(employerLogout());\r\n      dispatch(clearEmployerToken());\r\n      navigate('/');\r\n    }\r\n  \r\n    useEffect(() => {\r\n      dispatch(fetchEmployer());\r\n    }, [dispatch]);\r\n  \r\n    return (\r\n      <Menu open={isMenuOpen} handler={setIsMenuOpen} placement=\"bottom-end\">\r\n        <MenuHandler>\r\n          <Button\r\n            variant=\"text\"\r\n            color=\"blue-gray\"\r\n            className=\"flex items-center gap-1 rounded-full py-0.5 pr-2 pl-0.5 lg:ml-auto\"\r\n          >\r\n            <Avatar\r\n              \r\n              variant=\"circular\"\r\n              size=\"sm\"\r\n              alt=\"\"\r\n              className=\"border border-blue-500 p-0.5\"\r\n              src={\"https://www.shutterstock.com/image-vector/simple-profile-icon-isolated-circle-250nw-534481072.jpg\"}\r\n            />\r\n            <ChevronDownIcon\r\n              strokeWidth={2.5}\r\n              className={`h-3 w-3 transition-transform ${\r\n                isMenuOpen ? \"rotate-180\" : \"\"\r\n              }`}\r\n            />\r\n          </Button>\r\n        </MenuHandler>\r\n        <MenuList className=\"p-1\">\r\n          {profileMenuItems.map(({ label, icon }, key) => {\r\n            const isLastItem = key === profileMenuItems.length - 1;\r\n            return (\r\n              <MenuItem\r\n                key={label}\r\n                onClick={label === 'Sign Out' ? () => {handleLogout()} : closeMenu}\r\n                className={`flex items-center gap-2 rounded ${\r\n                  isLastItem\r\n                    ? \"hover:bg-red-500/10 focus:bg-red-500/10 active:bg-red-500/10\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                {React.createElement(icon, {\r\n                  className: `h-4 w-4 ${isLastItem ? \"text-red-500\" : \"\"}`,\r\n                  strokeWidth: 2,\r\n                })}\r\n                <Typography\r\n                  as=\"span\"\r\n                  variant=\"small\"\r\n                  className=\"font-normal\"\r\n                  color={isLastItem ? \"red\" : \"inherit\"}\r\n                >\r\n                  {label}\r\n                </Typography>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </MenuList>\r\n      </Menu>\r\n    );\r\n  }\r\n  \r\n  export default function EmployerHeaderWithNav() {\r\n    return (\r\n      <Navbar className=\"mx-auto max-w-screen-xl p-2 lg:pl-6\">\r\n        <div className=\"relative mx-auto flex items-center text-blue-gray-900\">\r\n          <ProfileMenu />\r\n        </div>\r\n      </Navbar>\r\n    );\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { EmployerRegisterPayload } from \"../../../types/PayloadInterface\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { employerData } from \"../../../features/axios/api/employer/employerDetails\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Avatar,\r\n  Typography,\r\n  Tooltip,\r\n} from \"@material-tailwind/react\";\r\nimport {\r\n  PencilIcon,\r\n} from \"@heroicons/react/24/solid\";\r\n\r\nfunction EmployerProfile() {\r\n  const [employerDetails, setEmployerDetails] = useState<EmployerRegisterPayload>();\r\n  useEffect(()=> {\r\n    const employerDetails = async () => {\r\n        const data = await employerData();\r\n        setEmployerDetails(data?.employerData);\r\n    }\r\n    employerDetails();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"pl-16 pr-16\">\r\n      <div className=\"relative mt-8 h-72 w-full overflow-hidden rounded-xl bg-[url(https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80)] bg-cover\tbg-center\">\r\n        <div className=\"absolute inset-0 h-full w-full bg-brown-500/50\" />\r\n      </div>\r\n      <Card className=\"mx-3 -mt-16 mb-6 lg:mx-4 shadow-lg shadow-gray-400\">\r\n        <CardBody className=\"p-4\">\r\n          <div className=\"mb-10 flex items-center justify-between gap-6\">\r\n            <div className=\"flex items-center gap-6\">\r\n              <Avatar\r\n                src={\"https://as1.ftcdn.net/v2/jpg/02/59/39/46/1000_F_259394679_GGA8JJAEkukYJL9XXFH2JoC3nMguBPNH.jpg\"}\r\n                alt=\"img\"\r\n                size=\"xl\"\r\n                className=\"rounded-lg shadow-lg shadow-blue-gray-500/40\"\r\n              />\r\n              <div>\r\n                <Typography variant=\"h5\" color=\"blue-gray\" className=\"mb-1\">\r\n                  {employerDetails?.companyName ?? \"\"}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"small\"\r\n                  className=\"font-normal text-blue-gray-600\"\r\n                >\r\n                  {employerDetails?.industry ?? \"\"}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gird-cols-1 mb-12 grid gap-4 px-4 lg:grid-cols-2 xl:grid-cols-1\">\r\n            <Typography variant=\"h6\" color=\"blue-gray\" className=\"mb-3\">\r\n              <div className=\"flex gap-x-3\">\r\n                Profile Information\r\n                <Link to={\"/employer/edit-profile\"}>\r\n                  <Tooltip content=\"Edit Profile\">\r\n                    <PencilIcon className=\"h-4 w-4 cursor-pointer text-brown-500\" />\r\n                  </Tooltip>\r\n                </Link>\r\n              </div>\r\n            </Typography>\r\n            <hr className=\"my-1 border-blue-gray-50\" />\r\n            <div>\r\n              <CardBody className=\"p-0\">\r\n                <ul className=\"flex flex-col gap-4 p-0\">\r\n                  <li className=\"flex items-center gap-4\">\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"font-semibold capitalize\"\r\n                    >\r\n                     Company Name:\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      className=\"font-normal text-blue-gray-500\"\r\n                    >\r\n                      {employerDetails?.companyName ?? \"\"}\r\n                    </Typography>\r\n                  </li>\r\n                  <hr className=\"my-1 border-blue-gray-50\" />\r\n                  <li className=\"flex items-center gap-4\">\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"font-semibold capitalize\"\r\n                    >\r\n                      Email:\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      className=\"font-normal text-blue-gray-500\"\r\n                    >\r\n                      {employerDetails?.email ?? \"\"}\r\n                    </Typography>\r\n                  </li>\r\n                  <hr className=\"my-1 border-blue-gray-50\" />\r\n                  <li className=\"flex items-center gap-4\">\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"font-semibold capitalize\"\r\n                    >\r\n                      Location:\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      className=\"font-normal text-blue-gray-500\"\r\n                    >\r\n                      {employerDetails?.location ?? \"\"}\r\n                    </Typography>\r\n                  </li>\r\n                  <hr className=\"my-1 border-blue-gray-50\" />\r\n                  <li className=\"flex items-center gap-4\">\r\n  <Typography\r\n    variant=\"small\"\r\n    color=\"blue-gray\"\r\n    className=\"font-semibold capitalize\"\r\n  >\r\n    status:\r\n  </Typography>\r\n\r\n  <Typography\r\n    variant=\"small\"\r\n    className={`font-normal ${\r\n      employerDetails?.isVerified === false ? \"text-red-500\" : \"text-green-500\"\r\n    }`}\r\n  >\r\n    {employerDetails?.isVerified === false\r\n      ? \"NOT verified! Your verification is under process!\"\r\n      : \"Active\"}\r\n  </Typography>\r\n</li>\r\n                  <hr className=\"my-1 border-blue-gray-50\" />\r\n                  <li className=\"flex items-center gap-4\">\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"font-semibold capitalize\"\r\n                    >\r\n                      About:\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      className=\"font-normal text-blue-gray-500\"\r\n                    >\r\n                      {employerDetails?.about ?? \"\"}\r\n                    </Typography>\r\n                  </li>\r\n                  <hr className=\"my-1 border-blue-gray-50\" />\r\n                </ul>\r\n              </CardBody>\r\n            </div>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default EmployerProfile;","import Conversations from \"../../Components/Messenger/employer/EmployerCoversations\";\r\nimport Message from \"../../Components/Messenger/employer/EmployerMessenger\";\r\nimport { Tooltip } from \"@material-tailwind/react\";\r\nimport { IoPaperPlaneSharp } from \"react-icons/io5\";\r\nimport { fetchEmployer } from \"../../features/axios/redux/slices/employer/employerDetailsSlice\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../features/axios/redux/reducers/Reducer\";\r\nimport { getEmployerConversations } from \"../../features/axios/api/messenger/conversation\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport configKeys from \"../../utils/config\";\r\nimport {\r\n  getEmployerMessages,\r\n  postEmployerMessages,\r\n} from \"../../features/axios/api/messenger/messages\";\r\n\r\nfunction Messenger() {\r\n  const dispatch = useDispatch();\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n  const socket = useRef<Socket | null>(null);\r\n  const employer = useSelector(\r\n    (state: RootState) => state?.employerDetails?.employerDetails\r\n  );\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState<any>(null);\r\n  const [messages, setMessages] = useState<any>(null);\r\n  const [newMessage, setNewMessage] = useState<any>(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState<any>(null);\r\n  const [onlineUsers, setOnlineUsers] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(configKeys.SOCKET_PORT);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data?.senderId,\r\n        text: data?.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members?.includes(arrivalMessage.sender) &&\r\n      setMessages((prev: any) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket?.current?.emit(\"addUser\", employer?.employerData?._id);\r\n    socket?.current?.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [employer?.employerData?._id]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployer());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      if (employer) {\r\n        const res = await getEmployerConversations(employer?.employerData?._id);\r\n        setConversations(res);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [employer]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      if (currentChat) {\r\n        try {\r\n          const res = await getEmployerMessages(currentChat?._id);\r\n          setMessages(res);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      conversationId: currentChat?._id,\r\n      sender: employer?.employerData?._id,\r\n      text: newMessage,\r\n    };\r\n\r\n    const receiverId = currentChat?.members?.find(\r\n      (member: any) => member !== employer?.employerData?._id\r\n    );\r\n\r\n    socket?.current?.emit(\"sendMessage\", {\r\n      senderId: employer?.employerData?._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await postEmployerMessages(message);\r\n      setMessages([...messages, res]);\r\n      setNewMessage(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\" h-screen pb-[70px] flex mx-auto max-w-screen-xl p-2 mt-4 rounded\">\r\n        <div className=\"flex-auto p-3\">\r\n          <div>\r\n            <input\r\n              className=\"w-5/6 p-3 border-b border-solid border-gray-500 focus:outline-none\"\r\n              placeholder=\"Search user\"\r\n              type=\"text\"\r\n            />\r\n            <div className=\"h-96 overflow-y-auto\">\r\n              {conversations?.map((c, index) => (\r\n                <div onClick={() => setCurrentChat(c)} key={index}>\r\n                  <Conversations\r\n                    conversation={c}\r\n                    currentUser={employer?.employerData}\r\n                    onlineUsers={onlineUsers}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-auto p-3 w-64\">\r\n          <div className=\"flex flex-col justify-between h-full relative\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"pr-2 h-full overflow-y-auto scrollbar-thin scrollbar-thumb-gray-500 scrollbar-track-gray-200\">\r\n                  {messages?.map((msg: any, index: any) => (\r\n                    <div key={index} ref={scrollRef}>\r\n                      <Message\r\n                        message={msg}\r\n                        own={msg?.sender === employer?.employerData?._id}\r\n                        id={msg?.sender}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-2 flex items-center justify-between\">\r\n                  <textarea\r\n                    className=\"w-10/12 h-24 p-3 focus:outline-none\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Write something...\"\r\n                    value={newMessage}\r\n                  />\r\n                  <Tooltip content=\"Send\">\r\n                    <button\r\n                      onClick={handleSubmit}\r\n                      className=\"text-3xl text-blue-600\"\r\n                    >\r\n                      <IoPaperPlaneSharp />\r\n                    </button>\r\n                  </Tooltip>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"absolute top-10 text-4xl text-gray-400 cursor-default \">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messenger;","import React from \"react\";\r\nimport Sidenav from \"../../Components/Employer/Side-nav/SdeNav\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { NavRoutes } from \"../../Context/NavRoutes\";\r\nimport AllJobsEmployer from \"../../Components/Employer/Employer/AllJobsEmployer\";\r\nimport Dashboard from \"../../Components/Employer/Employer/Dashboard\";\r\nimport Applications from \"../../Components/Employer/Employer/Applications\";\r\nimport EmployerHeaderWithNav from \"../../Components/Header/EmployerHeaderWithNav\";\r\nimport EmployerProfile from \"../../Components/Employer/profile/EmployerProfile\";\r\n\r\n//  import EmployerEditProfile from \"../../components/Employer/Profile/EmployerEditProfile\";\r\n import EmployerMessenger from \"../messenger/EmployerMessenger\";\r\n\r\nfunction EmployerHomePage() {\r\n  return (\r\n    <div className=\"flex\">\r\n      <div className=\"w-1/5\">\r\n        <Sidenav routes={NavRoutes} />\r\n      </div>\r\n      <div className=\"w-4/5 pl-6 pr-6\">\r\n        <div className=\"relative mx-auto flex items-center text-blue-gray-900 pb-10 pt-6\">\r\n          <EmployerHeaderWithNav />\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/all-jobs\" element={<AllJobsEmployer />} />\r\n          <Route path=\"/applications\" element={<Applications />} />\r\n          <Route path=\"/profile\" element={<EmployerProfile/>}/>\r\n          {/* <Route path=\"/edit-profile\" element={ <EmployerEditProfile/>} /> */}\r\n          <Route path=\"/messenger\" element={<EmployerMessenger/>} /> \r\n\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployerHomePage;"],"names":["_ref","_user$image","conversation","currentUser","onlineUsers","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isOnline","setIsOnline","useEffect","_conversation$members","senderId","members","find","m","_id","getUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","concat","configKeys","API_URL","sent","data","t0","console","log","stop","apply","arguments","member","onlineUser","filter","f","userId","length","_jsxs","className","children","_jsx","src","image","alt","name","message","own","id","_res","text","format","createdAt","api","setupAxiosInterceptorsEmployer","EmployerVerificationCheck","config","response","url","apiConfig","Employer_Verification_check","method","abrupt","Error","userApi","setupAxiosInterceptors","empApi","getUserConversations","getConversations","_x","getEmployerConversations","_callee2","empId","_context2","_x2","createConversation","_ref3","_callee3","user1","user2","_context3","receiverId","_x3","_x4","getUserMessages","conId","getMessages","postUserMessages","getEmployerMessages","postEmployerMessages","_ref4","_callee4","_context4","Sidenav","routes","selected","setSelected","openSidenav","handleClick","Link","to","Typography","variant","color","IconButton","size","ripple","XMarkIcon","strokeWidth","map","key","layout","title","pages","icon","path","NavLink","isActive","Button","fullWidth","onClick","defaultProps","brandImg","brandName","displayName","NavRoutes","FaChartBar","_objectSpread","FaBriefcase","FaEnvelope","FaFacebookMessenger","FaUser","employerJobs","employerJObs","isOpen","onClose","onConfirm","isLoading","setIsLoading","dispatch","useDispatch","handleConfirm","setTimeout","deleted","toast","success","error","Transition","Root","show","as","Fragment","Dialog","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","ExclamationTriangleIcon","Title","type","disabled","deleteJob","classNames","_len","classes","Array","_key","Boolean","join","jobs","showDeleteConfirmation","setShowDeleteConfirmation","selectedJobId","setSelectedJobId","navigate","useNavigate","BriefcaseIcon","employmentType","MapPinIcon","location","CurrencyDollarIcon","salary","CalendarIcon","Date","toLocaleDateString","PencilIcon","jobId","setEmployerJobId","LinkIcon","TrashIcon","Menu","ChevronDownIcon","React","Items","Item","active","href","ConfirmDelete","ToastContainer","_getPaginatedData","useSelector","state","change","searchQuery","setSearchQuery","debouncedSearchQuery","setDebouncedSearchQuery","_useState5","_useState6","currentPage","setCurrentPage","employerAllJobs","fetchJobsAndStore","setEmployerJobs","clearEmployerJobs","timer","clearTimeout","filterJobs","job","_job$title","_job$employmentType","_job$location","toLocaleLowerCase","includes","changePage","pageNumber","_useState7","_useState8","isVerified","setIsVerified","checkVerified","result","Card","CardHeader","floated","shadow","PlusIcon","role","xmlns","fill","viewBox","d","Input","label","MagnifyingGlassIcon","value","onChange","e","target","crossOrigin","undefined","CardBody","startIndex","endIndex","reverse","slice","getPaginatedData","JobsByEmployer","CardFooter","Math","ceil","allApplications","applications","allApplication","TABLE_HEAD","ITEMS_PER_PAGE","Applications","applicationData","setApplicationData","handleViewApplicant","applicationId","filterApplication","application","_application$userId","_application$userId$n","_application$jobId","_application$jobId$ti","_application$applicat","applicationStatus","reverseFilterApplication","_toConsumableArray","head","index","ChevronUpDownIcon","_data$userId$image","_data$userId","_data$userId2","_data$userId3","_data$jobId","jobDetails","Avatar","email","Chip","Tooltip","content","EyeIcon","profileMenuItems","InboxArrowDownIcon","PowerIcon","ProfileMenu","isMenuOpen","setIsMenuOpen","closeMenu","employerDetails","fetchEmployer","open","handler","placement","MenuHandler","MenuList","isLastItem","MenuItem","employerLogout","clearEmployerToken","EmployerHeaderWithNav","Navbar","_employerDetails$comp","_employerDetails$indu","_employerDetails$comp2","_employerDetails$emai","_employerDetails$loca","_employerDetails$abou","setEmployerDetails","employerData","companyName","industry","about","_employer$employerDat2","scrollRef","useRef","socket","employer","_state$employerDetail","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","_useState9","_useState10","arrivalMessage","setArrivalMessage","_useState11","_useState12","setOnlineUsers","current","io","SOCKET_PORT","on","sender","now","_currentChat$members","_socket$current","_employer$employerDat","_socket$current2","emit","users","_employer$employerDat3","_scrollRef$current","scrollIntoView","behavior","handleSubmit","_employer$employerDat4","_currentChat$members2","_socket$current3","_employer$employerDat6","preventDefault","conversationId","_employer$employerDat5","placeholder","c","Conversations","_Fragment","msg","_employer$employerDat7","ref","Message","IoPaperPlaneSharp","Routes","Route","element","Dashboard","AllJobsEmployer","EmployerProfile","EmployerMessenger"],"sourceRoot":""}